<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- Begin project description -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>graphbase</groupId>
	<artifactId>graphbase</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>GraphBase: Graphite Adapter for OpenTSDB</name>
	<packaging>jar</packaging>
	<!-- End project description -->

	<properties>
		<java.verison>1.6</java.verison>
		<scala.major.version>2.10</scala.major.version>
		<scala.minor.version>4</scala.minor.version>
		<scala.version>${scala.major.version}.${scala.minor.version}</scala.version>
		<akka.version>2.3.3</akka.version>
		<unfiltered.version>0.7.1</unfiltered.version>
		<dispatch.version>0.8.10</dispatch.version>
		<jython.version>2.5.3</jython.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<!-- Unfortunately the maintainer of OpenTSDB refuses to use a modern 
	     dependency management framework so we have to check in the OpenTSDB 
	     jar into our git repo (yuck!) -->
	<repositories>
		<repository>
			<id>graphbase</id>
			<name>Graphbase Repository</name>
			<url>file:${project.basedir}/lib</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<!-- Begin dependency declarations -->
	<dependencies>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.major.version}</artifactId>
			<version>2.1.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-tools.testing</groupId>
			<artifactId>specs_${scala.major.version}</artifactId>
			<version>1.6.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<version>4.11</version>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.3</version>
		</dependency>

		<!-- Python -->
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>${jython.version}</version>
		</dependency>
		
		<!-- OpenTSDB -->
		<dependency>
			<groupId>net.opentsdb</groupId>
			<artifactId>opentsdb</artifactId>
			<version>2.0.0</version>
		</dependency>

		<!-- Scala/Unfiltered/Dispatch/Akka -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>unfiltered_${scala.major.version}</artifactId>
			<version>${unfiltered.version}</version>
		</dependency>
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>unfiltered-filter_${scala.major.version}</artifactId>
			<version>${unfiltered.version}</version>
		</dependency>
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>unfiltered-filter-async_${scala.major.version}</artifactId>
			<version>${unfiltered.version}</version>
		</dependency>
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>unfiltered-jetty_${scala.major.version}</artifactId>
			<version>${unfiltered.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>unfiltered-scalatest_${scala.major.version}</artifactId>
			<version>${unfiltered.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.databinder</groupId>
			<artifactId>dispatch-http_${scala.major.version}</artifactId>
			<version>${dispatch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_${scala.major.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-agent_${scala.major.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		-->
		<dependency>
			<groupId>com.frugalmechanic</groupId>
			<artifactId>scala-optparse_${scala.major.version}</artifactId>
			<version>1.1.1</version>
		</dependency>

	</dependencies>
	<!-- End dependency declarations -->

	<!-- Begin build configuration -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.avro</groupId>
										<artifactId>avro-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>protocol</goal>
											<goal>schema</goal>
											<goal>idl-protocol</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.scala-tools</groupId>
										<artifactId>maven-scala-plugin</artifactId>
										<versionRange>[2.15.2,)</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<compilerVersion>${java.verison}</compilerVersion>
					<source>${java.verison}</source>
					<target>${java.verison}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<argLine>-Xmx2G -XX:MaxPermSize=256M</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<args>
						<arg>-unchecked</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms64m</jvmArg>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/distribution.xml</descriptor>
					</descriptors>
					<attach>true</attach>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>distribution</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<tarLongFileMode>gnu</tarLongFileMode>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- End build configuration -->

</project>
